{
	"_type": "export",
	"__export_format": 3,
	"__export_date": "2019-03-10T10:19:59.228Z",
	"__export_source": "insomnia.desktop.app:v6.3.2",
	"resources": [
		{
			"_id": "wrk_c6c4382ceed1427096da5943653d58bd",
			"created": 1551269894822,
			"description": "",
			"modified": 1552212872781,
			"name": "vPlan2",
			"parentId": null,
			"_type": "workspace"
		},
		{
			"_id": "env_2d13e3236b9c4b7abcbf2b269578fb4e",
			"color": null,
			"created": 1551269894914,
			"data": {
				"host": "http://localhost:8080"
			},
			"isPrivate": false,
			"metaSortKey": 1551269894914,
			"modified": 1551784167695,
			"name": "New Environment",
			"parentId": "wrk_c6c4382ceed1427096da5943653d58bd",
			"_type": "environment"
		},
		{
			"_id": "jar_f8339b85947148b6b8e8b05c6c172700",
			"cookies": [
				{
					"creation": "2019-03-09T12:41:29.738Z",
					"domain": "localhost",
					"expires": "2019-03-10T10:50:09.000Z",
					"hostOnly": true,
					"id": "5408586617245745",
					"key": "session_main",
					"lastAccessed": "2019-03-10T09:50:09.592Z",
					"maxAge": 3600,
					"path": "/",
					"value": "MTU1MjIxMTQwOXxCUXdBQWpRMHyPlJDStVzBzGLZzkcoi2xBzezIwGFkPjnHRdlNLjJM5A=="
				}
			],
			"created": 1551269894919,
			"modified": 1552211409593,
			"name": "Default Jar",
			"parentId": "wrk_c6c4382ceed1427096da5943653d58bd",
			"_type": "cookie_jar"
		},
		{
			"_id": "fld_8b6da648858e47c4a76276773eb9959f",
			"created": 1552212431003,
			"description": "",
			"environment": {},
			"metaSortKey": -1552212445816,
			"modified": 1552212448835,
			"name": "auth",
			"parentId": "wrk_c6c4382ceed1427096da5943653d58bd",
			"_type": "request_group"
		},
		{
			"_id": "fld_1a54cb12ca954bcb84dacefa31686e23",
			"created": 1552212445766,
			"description": "",
			"environment": {},
			"metaSortKey": -1552212445766,
			"modified": 1552212445766,
			"name": "vplan",
			"parentId": "wrk_c6c4382ceed1427096da5943653d58bd",
			"_type": "request_group"
		},
		{
			"_id": "fld_c51753dda14c47acb0d95505ec6e9aaf",
			"created": 1552212460617,
			"description": "",
			"environment": {},
			"metaSortKey": -1551998333382,
			"modified": 1552212463571,
			"name": "settings",
			"parentId": "wrk_c6c4382ceed1427096da5943653d58bd",
			"_type": "request_group"
		},
		{
			"_id": "req_de6171543b15428db45e4251b0aefd63",
			"authentication": {},
			"body": {},
			"created": 1551784220998,
			"description": "",
			"headers": [
				{
					"disabled": true,
					"id": "pair_f368a53a26ae4469aa5a2f7ec1c88507",
					"name": "Authorization",
					"value": "Mjg0MDI1NTU2MzE1NTE4NjMyODE2NjQ2MjM0MDA="
				}
			],
			"isPrivate": false,
			"metaSortKey": -1551784220998,
			"method": "POST",
			"modified": 1551863340581,
			"name": "/api/test",
			"parameters": [],
			"parentId": "wrk_c6c4382ceed1427096da5943653d58bd",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/test",
			"_type": "request"
		},
		{
			"_id": "req_7eb6bb2c7c9f42cc93cc7081a9e4a66e",
			"authentication": {},
			"body": {
				"mimeType": "application/json",
				"text": "{\n\t\"password\": \"password\",\n\t\"group\": \"user\",\n\t\"session\": 1\n}"
			},
			"created": 1551771885679,
			"description": "### Authenticate\n\n> POST /api/authenticate/:USERNAME\n\n#### Parameters\n\n| Name | Type | Description |\n|------|------|-------------|\n| `password` | `string` | The password of the user |\n| *`group`* | `string` | If the server requires a group to authenticate, you can specify this here |\n| *`session`* | `int` | Specify if the login should be treated as session creation which sets the authentication credentials as cookie. If this value is set `> 0`, you will not get an API key as response.<br/>`1` - basic session (valid for 1 hour)<br/>`2` - remembered session (valid for 30 days) |\n\n#### Response\n\nIf `session` value is `0`\n\n```\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n```\n```json\n{\n  \"ident\": \"cn=mustermax,dc=example,dc=de\",\n  \"ctx\": {\n    \"cn\": [\n      \"mustermax\"\n    ],\n    \"ou\": [\n      \"user\"\n    ]\n  },\n  \"token\": \"Nzc2Nzk2Mzc4MDE1NTE3Nzk4MDk5NjA0OTQ2MDA=\",\n  \"expire\": \"2019-04-05T15:09:57.9536976+02:00\"\n}\n```\n\nIf `session` value is larger than `0`\n\n```\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Set-Cookie: main=MTU1MDU4NDEzNnxCQXdBQVRNPXwUbN6LLxTTxJ-eXp2SjGxnBg4o6E-IMFTUz1m2daa0aQ==; Path=/; Expires=Tue, 19 Feb 2019 14:48:56 GMT; Max-Age=3600\n```\n\n```json\n{\n  \"ident\": \"cn=mustermax,ou=user,dc=zekro,dc=de\",\n  \"ctx\": {\n    \"cn\": [\n      \"mustermax\"\n    ],\n    \"ou\": [\n      \"user\"\n    ]\n  }\n}\n```",
			"headers": [
				{
					"id": "pair_8bce817046f949789e50759b72e48193",
					"name": "Content-Type",
					"value": "application/json"
				}
			],
			"isPrivate": false,
			"metaSortKey": -1551784221048,
			"method": "POST",
			"modified": 1552212954179,
			"name": "/api/autenticate",
			"parameters": [],
			"parentId": "fld_8b6da648858e47c4a76276773eb9959f",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/authenticate/mustermax",
			"_type": "request"
		},
		{
			"_id": "req_27c5a049d9684d53ba1d676b2001ba5e",
			"authentication": {},
			"body": {},
			"created": 1551784255509,
			"description": "### Logout\n\n> POST /api/logout\n\n#### Parameters\n\n*No parameters required.*\n\n#### Response\n\n> This endpoint does not respond with any body information. Also, it does not check if you already have set a session cookie. It will just set the session cookie as deleted and expired, so the cookie will be deleted on session ending.\n\n```\n< HTTP/1.1 200 OK\n```",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1551784220998,
			"method": "POST",
			"modified": 1552212965820,
			"name": "/api/logout",
			"parameters": [],
			"parentId": "fld_8b6da648858e47c4a76276773eb9959f",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/logout",
			"_type": "request"
		},
		{
			"_id": "req_bbcb7f6e0a7d4431a9142fde888a85bc",
			"authentication": {},
			"body": {},
			"created": 1552212978055,
			"description": "### Get Logins\n\n> GET /api/logins\n\n#### Parameters\n> Parameters must be passed by *(URL encoded)* URL parameters.\n\n| Name | Type | Description |\n|------|------|-------------|\n| *`time`* | `string` | [RFC 3339](https://tools.ietf.org/html/rfc3339) encoded timestamp after which logins are requested |\n\n#### Response\n\nResponse contains a `type` value of the logins which must be interpreted as following:\n\n| Type | Description |\n|------|-------------|\n| `0` | **Web Interface Login** - A default login over the web interface mask using session cookies to authenticate |\n| `1` | **Token Creation** - An API token generated by the authenticate endpoint |\n\n```\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n```\n```json\n{\n  \"data\": [\n    {\n      \"ident\": \"cn=mustermax,dc=example,dc=de\",\n      \"timestamp\": \"2019-03-07T08:40:44Z\",\n      \"type\": 0,\n      \"useragent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0\",\n      \"ipaddress\": \"123.45.67.89:53321\"\n    },\n    {\n      \"ident\": \"cn=mustermax,dc=example,dc=de\",\n      \"timestamp\": \"2019-03-07T10:04:16Z\",\n      \"type\": 0,\n      \"useragent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36\",\n      \"ipaddress\": \"13.37.69.111:54168\"\n    },\n    {\n      \"ident\": \"cn=mustermax,dc=example,dc=de\",\n      \"timestamp\": \"2019-03-07T11:14:35Z\",\n      \"type\": 1,\n      \"useragent\": \"MyCustomWebApplicationUsingTokenSystem\",\n      \"ipaddress\": \"13.37.69.111:54168\"\n    }\n  ]\n}\n```",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1551784220948,
			"method": "GET",
			"modified": 1552213018333,
			"name": "/api/logins",
			"parameters": [],
			"parentId": "fld_8b6da648858e47c4a76276773eb9959f",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/logins",
			"_type": "request"
		},
		{
			"_id": "req_e79968191d7b4365a0c33eb0730ce5f7",
			"authentication": {},
			"body": {},
			"created": 1551871843620,
			"description": "### Get VPlans\n\n> GET /api/vplan\n\n#### Parameters\n> Parameters must be passed by *(URL encoded)* URL parameters.\n\n| Name | Type | Description |\n|------|------|-------------|\n| *`time`* | `string` | [RFC 3339](https://tools.ietf.org/html/rfc3339) encoded timestamp after which VPlans are requested |\n| *`class`* | `string` | Name of the class of which the VPlan entries will be filtered |\n\n#### Response\n\n```\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n```\n```json\n{\n  \"data\": [\n    {\n      \"id\": 1397,\n      \"date_edit\": \"2019-01-18T09:17:47Z\",\n      \"date_for\": \"2019-03-08T00:00:00Z\",\n      \"block\": \"X\",\n      \"header\": \"\",\n      \"footer\": \"\",\n      \"entries\": [\n        {\n          \"id\": 26352,\n          \"vplan_id\": 1397,\n          \"class\": \"UL17X\",\n          \"time\": \"7./8.\",\n          \"messures\": \"LF8 in 034 vom 17.01.\",\n          \"responsible\": \"Hr. A\"\n        }\n      ]\n    },\n    {\n      \"id\": 1408,\n      \"date_edit\": \"2019-02-15T10:09:12Z\",\n      \"date_for\": \"2019-03-04T00:00:00Z\",\n      \"block\": \"F\",\n      \"header\": \"Montag, den 04.03.2019\\r\\nabwesend: Hr. W\",\n      \"footer\": \"IO16F Projekt\",\n      \"entries\": [\n        {\n          \"id\": 26776,\n          \"vplan_id\": 1408,\n          \"class\": \"TZ17F\",\n          \"time\": \"1./2. \",\n          \"messures\": \"Gr. W Ausfall ETCS\",\n          \"responsible\": \"Hr. W\"\n        },\n        {\n          \"id\": 26778,\n          \"vplan_id\": 1408,\n          \"class\": \"WQ16F\",\n          \"time\": \"3./4.\",\n          \"messures\": \"ganze Klasse RDSE in H1\",\n          \"responsible\": \"Hr. J\"\n        }\n      ]\n    },\n    {\n      \"id\": 1410,\n      \"date_edit\": \"2019-02-26T10:47:13Z\",\n      \"date_for\": \"2019-03-05T00:00:00Z\",\n      \"block\": \"B\",\n      \"header\": \"Dienstag, den 05.03. 2019\\r\\nabwesend: \",\n      \"footer\": \"\",\n      \"entries\": null\n    }\n  ]\n}\n```",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1551784221023,
			"method": "GET",
			"modified": 1552213043739,
			"name": "/api/vplan",
			"parameters": [
				{
					"disabled": false,
					"id": "pair_2ad29d2a1f0b4b8da8c0ee4aadcb8260",
					"name": "time",
					"value": "2019-03-03T00:00:00+00:00"
				}
			],
			"parentId": "fld_1a54cb12ca954bcb84dacefa31686e23",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/vplan",
			"_type": "request"
		},
		{
			"_id": "req_f2d4783bc0b646e4a709212148f51519",
			"authentication": {},
			"body": {},
			"created": 1552212514969,
			"description": "### Get User Settings\n\n> GET /api/settings\n\n#### Parameters\n> Parameters must be passed by *(URL encoded)* URL parameters.\n\n#### Response\n\n> Unset values are default type values, e.g. `\"\"` for strings or `0` for integers.\n\n```\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n```\n```json\n{\n  \"ident\": \"cn=mustermax,dc=example,dc=de\",\n  \"class\": \"ITF17C\",\n  \"theme\": \"dark\",\n  \"edited\": \"2019-03-07T16:22:19Z\"\n}\n```",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1552212514969,
			"method": "GET",
			"modified": 1552213055313,
			"name": "/api/settings",
			"parameters": [],
			"parentId": "fld_c51753dda14c47acb0d95505ec6e9aaf",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/settings",
			"_type": "request"
		},
		{
			"_id": "req_0591aaa8066f46c58aa17b46fdfec120",
			"authentication": {},
			"body": {
				"mimeType": "application/json",
				"text": "{\n\t\"class\": \"ABC19D\"\n}"
			},
			"created": 1552212598757,
			"description": "### Set User Settings\n\n> POST /api/settings\n\n#### Parameters\n\n> Only passed arguments will be updated in the user settings. If you want to set the value to the default initialization value of the value type, use the defined reset value.\n\n| Name | Type | Description |\n|------|------|-------------|\n| *`class`* | `string` | Users class name (`reset` to reset value) |\n| *`theme`* | `string` | UI theme (`reset` to reset value) |\n\n#### Response\n\n```\n< HTTP/1.1 200 OK\n```\n\n---\n\n© 2019 Justin Trommler, Richard Heidenreich, Ringo Hoffmann  \nCovered by MIT Licence.\n\nThe API structure and design is inspired by the REST API's of [discordapp.com](https://discordapp.com/developers/docs/intro) and [github.com](https://developer.github.com/v3/).",
			"headers": [
				{
					"id": "pair_df81d2e18e3e4fe1baa1dc97c78330b0",
					"name": "Content-Type",
					"value": "application/json"
				}
			],
			"isPrivate": false,
			"metaSortKey": -1552212514919,
			"method": "POST",
			"modified": 1552213067149,
			"name": "/api/settings",
			"parameters": [],
			"parentId": "fld_c51753dda14c47acb0d95505ec6e9aaf",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "{{ host  }}/api/settings",
			"_type": "request"
		}
	]
}